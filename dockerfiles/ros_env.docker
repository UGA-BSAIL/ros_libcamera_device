# Common container with a ROS Melodic installation.
FROM ubuntu:18.04 as common

# These dependencies are needed for installing keys.
RUN apt-get update && apt-get install -y gnupg2 curl

# Update apt sources to include ROS.
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu bionic main" > /etc/apt/sources.list.d/ros-latest.list'
RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -

# Fix timezones.
ENV TZ=America/New_York
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Install ROS.
RUN apt-get update && apt-get install -y \
    ros-melodic-ros-base ros-melodic-image-transport

# Add ros user.
ARG ROS_UID
RUN useradd -m -u $ROS_UID ros

# Container for building the code.
FROM common as builder

# Set up SSH for CLion.
RUN apt-get update && apt-get install -y ssh rsync && rm -rf /var/lib/apt/lists/*
RUN ( \
    echo 'LogLevel DEBUG2'; \
    echo 'PermitRootLogin yes'; \
    echo 'PasswordAuthentication yes'; \
    echo 'Subsystem sftp /usr/lib/openssh/sftp-server'; \
  ) > /etc/ssh/sshd_config_test_clion \
  && mkdir /run/sshd

RUN yes password | passwd ros

# Copy the wrapper script for cmake.
ADD scripts/catkin_cmake.sh /usr/bin/catkin_cmake

# Install libcamera.
RUN apt-get update && apt-get install -y git ninja-build libyaml-dev python3-yaml python3-ply \
    python3-jinja2 libgnutls28-dev openssl libdw-dev libudev-dev python3-pip gcc-8 g++-8 && \
    rm -rf /var/lib/apt/lists/*
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 50
RUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 50
RUN pip3 install meson
RUN git clone https://git.libcamera.org/libcamera/libcamera.git
RUN cd libcamera && meson build --buildtype=release -Dpipelines=raspberrypi -Dipas=raspberrypi \
    -Dv4l2=true -Dgstreamer=disabled -Dtest=false -Dlc-compliance=disabled -Dcam=disabled -Dqcam=disabled \
    -Ddocumentation=disabled && \
    ninja -C build install

# Install runtime dependencies.
RUN apt-get update && apt-get install -y libjpeg-dev libtiff-dev libpng-dev libexif-dev && rm -rf /var/lib/apt/lists/*

CMD ["/usr/sbin/sshd", "-D", "-e", "-f", "/etc/ssh/sshd_config_test_clion"]
